#
#  run on collection of ecal digis, make rechits, and then super clusters and store them
#  in the output collection
#
#  digi->rechit based on example from Fabio Cossutti
#
#  Author: David Futyan & Shahram Rahatlou
#  $Id: egammaDigiToClusters.cfg,v 1.11 2006/12/12 21:10:53 futyand Exp $
#
process PRODDC = {

 # initialize  MessageLogger
include "FWCore/MessageLogger/data/MessageLogger.cfi"

 # input
  source = PoolSource {
     #untracked vstring fileNames = {'file:ecal_digis.root'}
     #untracked vstring fileNames = {'/store/mc/2006/12/22/mc-physval-120-WToENU-LowLumi/0019/0026AE0E-969A-DB11-950E-003048769E6D.root'}
     #untracked vstring fileNames = {'file:/tmp/gdaskal/CMSSW_1_1_1/src/RecoEgamma/EgammaElectronProducers/test/DATA/mc-physval-111-DiEle-Pt35_0000_44CD3EE6-1973-DB11-9E76-00096BB5BFD2.root'}
     #untracked vstring fileNames = {'/store/mc/2006/12/22/mc-physval-120-ZToEE-LowLumi/0020/1EB58FA5-FF9C-DB11-81A0-003048769E65.root'}
     #untracked vstring fileNames = {'/store/mc/2006/12/26/mc-physval-120-DiEle-Ene30-NoTracker/0000/82B0AC8E-F799-DB11-B58E-00E08134923B.root'}
     #untracked vstring fileNames = {'/store/mc/2007/1/19/mc-onsel-120_PU_Zee-DIGI-RECO-NoPU/0000/00D8705A-53A9-DB11-86FA-00304885B1FC.root'}
     #untracked vstring fileNames = {'/store/RelVal/2006/12/16/SVSuiteRecoEGamma-Zee/0000/36D4FB33-6F8D-DB11-8DF2-0017312A247F.root'}
     #untracked vstring fileNames = {'/store/RelVal/2006/12/16/RelVal120Z-EE/0000/D0076B4E-598D-DB11-84AE-001731AF6867.root'}

     untracked vstring fileNames = {
'/store/mc/2006/12/26/mc-physval-120-DiEle-Ene30-NoTracker-NoB/0000/507F03BC-EA99-DB11-A6F8-00E0812F83DB.root',
'/store/mc/2006/12/26/mc-physval-120-DiEle-Ene30-NoTracker-NoB/0000/96B280BB-EA99-DB11-8B68-00E08134923B.root',
'/store/mc/2006/12/26/mc-physval-120-DiEle-Ene30-NoTracker-NoB/0000/CA2BF7DD-EA99-DB11-B718-00E081349B2F.root',
'/store/mc/2006/12/26/mc-physval-120-DiEle-Ene30-NoTracker-NoB/0000/D84491E5-EA99-DB11-8803-00E081348C8F.root',
'/store/mc/2006/12/26/mc-physval-120-DiEle-Ene30-NoTracker-NoB/0000/EE6A99DD-EA99-DB11-94E1-00E081348D65.root'
}
 
     untracked int32 maxEvents = 10
     untracked uint32 debugVebosity = 10
     untracked bool   debugFlag     = true
  }



#ECAL LocalReco sequence
include "RecoLocalCalo/EcalRecProducers/data/ecalLocalRecoSequence.cff"


# Calo geometry service model
 
   include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
   include "Geometry/CaloEventSetup/data/CaloTopology.cfi"





#Add RecHitsKiller module:
module CreateDeadCells = EcalChannelKiller {
   string hitProducer = "ecalRecHit"
   string hitCollection = "EcalRecHitsEB"
   string reducedHitCollection =  "EcalRecHitsEB"
   string DeadChannelsFile = 'DeadCells2448.txt'
}

module CorrectDeadCells = EcalDeadChannelRecoveryProducers {
   string hitProducer = "CreateDeadCells"
   string hitCollection = "EcalRecHitsEB"	
   string reducedHitCollection =  "EcalRecHitsEB"
   string DeadChannelsFile = 'DeadCells2448.txt'
   double Sum8GeVThreshold = 4.0
   bool CorrectDeadCells = true
   string CorrectionMethod = "Spline"
}


# all clustering in one sequence
#  include "RecoEcal/EgammaClusterProducers/data/ecalClusteringSequence.cff"
#SB Modify clustering sequence to run on new RecHits
# geometry needed for clustering
include "RecoEcal/EgammaClusterProducers/data/geometryForClustering.cff"

# create sequence for island clustering
include "RecoEcal/EgammaClusterProducers/data/islandClusteringSequence.cff"
replace islandBasicClusters.barrelHitProducer = "CorrectDeadCells"

# Island SuperCluster producer
include "RecoEcal/EgammaClusterProducers/data/islandSuperClusters.cfi"

# Energy scale correction for Island SuperClusters
include "RecoEcal/EgammaClusterProducers/data/correctedIslandSuperClusters.cfi"

# create sequence for island clustering
sequence islandClusteringSequence = {
             islandBasicClusters,
             islandSuperClusters,
             correctedIslandBarrelSuperClusters,
             correctedIslandEndcapSuperClusters
}

# hybrid clustering sequence
#include "RecoEcal/EgammaClusterProducers/data/hybridClusteringSequence.cff"

#------------------
#Hybrid clustering:
#------------------

# Producer for Hybrid BasicClusters and SuperClusters
include "RecoEcal/EgammaClusterProducers/data/hybridSuperClusters.cfi"
replace hybridSuperClusters.ecalhitproducer = "CorrectDeadCells"

# Energy scale correction for Hybrid SuperClusters
include "RecoEcal/EgammaClusterProducers/data/correctedHybridSuperClusters.cfi"

# hybrid clustering sequence
sequence hybridClusteringSequence = {
           hybridSuperClusters,
           correctedHybridSuperClusters }

# clusters in preshower
include "RecoEcal/EgammaClusterProducers/data/preshowerClusteringSequence.cff"

# create path with all clustering algos
# NB: preshower MUST be run after island clustering in the endcap
sequence ecalClusteringSequence = {
                                    islandClusteringSequence,
                                    hybridClusteringSequence,
                                    preshowerClusteringSequence
                                  }

  # path to run everything
  path p = { ecalLocalRecoSequence, CreateDeadCells, CorrectDeadCells ,ecalClusteringSequence}


  # output module
  module o2 = PoolOutputModule
  {
     untracked string fileName = "egamma_clusters_from_digis.root"
    untracked vstring outputCommands = {
     "drop *",
     "keep edmHepMCProduct_*_*_*",
     "keep edmHepMCProduct_source_*_*",
     "keep *_islandBasicClusters_*_*",
     "keep *_islandSuperClusters_*_*",
     "keep *_hybridSuperClusters_*_*",
     "keep *_correctedIslandBarrelSuperClusters_*_*",
     "keep *_correctedHybridSuperClusters_*_*",
     "keep *_correctedEndcapSuperClustersWithPreshower_*_*"
   } 

  }

  endpath outpath = { o2 }
}
